// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for RegisterErrorType.
const (
	DuplicateEmail  RegisterErrorType = "DuplicateEmail"
	InvalidEmail    RegisterErrorType = "InvalidEmail"
	InvalidPassword RegisterErrorType = "InvalidPassword"
)

// Defines values for GetTasksParamsSortBy.
const (
	CreatedAt GetTasksParamsSortBy = "created_at"
	EndTime   GetTasksParamsSortBy = "end_time"
	Priority  GetTasksParamsSortBy = "priority"
	StartTime GetTasksParamsSortBy = "start_time"
)

// Defines values for GetTasksParamsSortOrder.
const (
	Asc  GetTasksParamsSortOrder = "asc"
	Desc GetTasksParamsSortOrder = "desc"
)

// AuthTokens defines model for AuthTokens.
type AuthTokens struct {
	AccessToken  *string `json:"access_token,omitempty"`
	RefreshToken *string `json:"refresh_token,omitempty"`
}

// CreateFocusSessionRequest defines model for CreateFocusSessionRequest.
type CreateFocusSessionRequest struct {
	// BreakDuration Break duration in seconds
	BreakDuration *int32 `json:"break_duration,omitempty"`
	TaskId        int32  `json:"task_id"`

	// TimerDuration Duration in seconds
	TimerDuration int32 `json:"timer_duration"`
}

// CreateTaskRequest defines model for CreateTaskRequest.
type CreateTaskRequest struct {
	Description *string    `json:"description,omitempty"`
	EndTime     *time.Time `json:"end_time,omitempty"`

	// EstimatedTime Estimated time in minutes
	EstimatedTime *int32       `json:"estimated_time,omitempty"`
	Name          string       `json:"name"`
	Priority      TaskPriority `json:"priority"`
	StartTime     *time.Time   `json:"start_time,omitempty"`
	Status        TaskStatus   `json:"status"`
}

// DefaultResponse defines model for DefaultResponse.
type DefaultResponse struct {
	Message *string `json:"message,omitempty"`
}

// EndFocusSessionRequest defines model for EndFocusSessionRequest.
type EndFocusSessionRequest struct {
	// FocusDuration Elapsed focus duration in seconds for early ending
	FocusDuration *int32 `json:"focus_duration,omitempty"`
}

// FocusAnalytics defines model for FocusAnalytics.
type FocusAnalytics struct {
	AiFeedback *struct {
		ImprovementAreas *[]string `json:"improvement_areas,omitempty"`
		Motivation       *string   `json:"motivation,omitempty"`
		Strengths        *[]string `json:"strengths,omitempty"`
	} `json:"ai_feedback,omitempty"`

	// DailyTimeSpent Map of dates to seconds spent
	DailyTimeSpent *map[string]int `json:"daily_time_spent,omitempty"`

	// TaskStatusCounts Count of tasks in each status
	TaskStatusCounts *map[string]int `json:"task_status_counts,omitempty"`

	// TotalEstimatedTime Total estimated time in seconds
	TotalEstimatedTime *int32 `json:"total_estimated_time,omitempty"`

	// TotalTimeSpent Total time spent in seconds
	TotalTimeSpent *int32 `json:"total_time_spent,omitempty"`
}

// FocusSession defines model for FocusSession.
type FocusSession struct {
	// BreakDuration Break duration in seconds
	BreakDuration *int32     `json:"break_duration,omitempty"`
	CreatedAt     *time.Time `json:"created_at,omitempty"`

	// FocusDuration Elapsed focus duration in seconds
	FocusDuration *int32              `json:"focus_duration,omitempty"`
	Id            *int32              `json:"id,omitempty"`
	Status        *FocusSessionStatus `json:"status,omitempty"`
	TaskId        *int32              `json:"task_id,omitempty"`

	// TimerDuration Duration in seconds
	TimerDuration *int32     `json:"timer_duration,omitempty"`
	UpdatedAt     *time.Time `json:"updated_at,omitempty"`
	UserId        *int32     `json:"user_id,omitempty"`
}

// FocusSessionStatus defines model for FocusSessionStatus.
type FocusSessionStatus = string

// PaginationResponse defines model for PaginationResponse.
type PaginationResponse struct {
	// Limit Number of items per page
	Limit *int `json:"limit,omitempty"`

	// Page Current page number
	Page *int `json:"page,omitempty"`

	// Total Total number of items
	Total *int `json:"total,omitempty"`

	// TotalPages Total number of pages
	TotalPages *int `json:"total_pages,omitempty"`
}

// RegisterError defines model for RegisterError.
type RegisterError struct {
	Message *string            `json:"message,omitempty"`
	Type    *RegisterErrorType `json:"type,omitempty"`
}

// RegisterErrorType defines model for RegisterError.Type.
type RegisterErrorType string

// Task defines model for Task.
type Task struct {
	CreatedAt   *time.Time `json:"created_at,omitempty"`
	Description *string    `json:"description,omitempty"`
	EndTime     *time.Time `json:"end_time,omitempty"`

	// EstimatedTime Estimated time in minutes
	EstimatedTime *int32        `json:"estimated_time,omitempty"`
	Id            *int32        `json:"id,omitempty"`
	Name          *string       `json:"name,omitempty"`
	Priority      *TaskPriority `json:"priority,omitempty"`
	StartTime     *time.Time    `json:"start_time,omitempty"`
	Status        *TaskStatus   `json:"status,omitempty"`
	UpdatedAt     *time.Time    `json:"updated_at,omitempty"`
	UserId        *int32        `json:"user_id,omitempty"`
}

// TaskPriority defines model for TaskPriority.
type TaskPriority = string

// TaskStatus defines model for TaskStatus.
type TaskStatus = string

// UpdateTaskRequest defines model for UpdateTaskRequest.
type UpdateTaskRequest struct {
	Description *string    `json:"description,omitempty"`
	EndTime     *time.Time `json:"end_time,omitempty"`

	// EstimatedTime Estimated time in minutes
	EstimatedTime *int32        `json:"estimated_time,omitempty"`
	Name          *string       `json:"name,omitempty"`
	Priority      *TaskPriority `json:"priority,omitempty"`
	StartTime     *time.Time    `json:"start_time,omitempty"`
	Status        *TaskStatus   `json:"status,omitempty"`
}

// User defines model for User.
type User struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Email     *string    `json:"email,omitempty"`
	ID        *int32     `json:"id,omitempty"`
}

// LimitParam defines model for LimitParam.
type LimitParam = int

// PageParam defines model for PageParam.
type PageParam = int

// Forbidden defines model for Forbidden.
type Forbidden = DefaultResponse

// GetAnalyticsFocusParams defines parameters for GetAnalyticsFocus.
type GetAnalyticsFocusParams struct {
	StartDate *openapi_types.Date `form:"start_date,omitempty" json:"start_date,omitempty"`
	EndDate   *openapi_types.Date `form:"end_date,omitempty" json:"end_date,omitempty"`
}

// GetAuthGoogleCallbackParams defines parameters for GetAuthGoogleCallback.
type GetAuthGoogleCallbackParams struct {
	// Code Authorization code from Google
	Code string `form:"code" json:"code"`

	// State State parameter for CSRF protection
	State string `form:"state" json:"state"`
}

// PostAuthRefreshTokenJSONBody defines parameters for PostAuthRefreshToken.
type PostAuthRefreshTokenJSONBody struct {
	RefreshToken *string `json:"refresh_token,omitempty"`
}

// PostAuthRefreshTokenParams defines parameters for PostAuthRefreshToken.
type PostAuthRefreshTokenParams struct {
	// RefreshToken Refresh token stored in cookie
	RefreshToken *string `form:"refresh_token,omitempty" json:"refresh_token,omitempty"`
}

// PostLoginJSONBody defines parameters for PostLogin.
type PostLoginJSONBody struct {
	Email    *string `json:"email,omitempty"`
	Password *string `json:"password,omitempty"`
}

// PostLogoutJSONBody defines parameters for PostLogout.
type PostLogoutJSONBody struct {
	RefreshToken *string `json:"refresh_token,omitempty"`
}

// PostLogoutParams defines parameters for PostLogout.
type PostLogoutParams struct {
	// RefreshToken Refresh token stored in cookie
	RefreshToken *string `form:"refresh_token,omitempty" json:"refresh_token,omitempty"`
}

// PostRegisterJSONBody defines parameters for PostRegister.
type PostRegisterJSONBody struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetTasksParams defines parameters for GetTasks.
type GetTasksParams struct {
	// Page Page number
	Page *PageParam `form:"page,omitempty" json:"page,omitempty"`

	// Limit Number of items per page
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`

	// Search Search term to filter tasks by name or description
	Search *string `form:"search,omitempty" json:"search,omitempty"`

	// Status Filter tasks by status
	Status *TaskStatus `form:"status,omitempty" json:"status,omitempty"`

	// Priority Filter tasks by priority
	Priority *TaskPriority `form:"priority,omitempty" json:"priority,omitempty"`

	// StartDate Filter tasks by start date (inclusive)
	StartDate *openapi_types.Date `form:"start_date,omitempty" json:"start_date,omitempty"`

	// EndDate Filter tasks by end date (inclusive)
	EndDate *openapi_types.Date `form:"end_date,omitempty" json:"end_date,omitempty"`

	// SortBy Field to sort by
	SortBy *GetTasksParamsSortBy `form:"sort_by,omitempty" json:"sort_by,omitempty"`

	// SortOrder Sort order
	SortOrder *GetTasksParamsSortOrder `form:"sort_order,omitempty" json:"sort_order,omitempty"`
}

// GetTasksParamsSortBy defines parameters for GetTasks.
type GetTasksParamsSortBy string

// GetTasksParamsSortOrder defines parameters for GetTasks.
type GetTasksParamsSortOrder string

// PostAuthRefreshTokenJSONRequestBody defines body for PostAuthRefreshToken for application/json ContentType.
type PostAuthRefreshTokenJSONRequestBody PostAuthRefreshTokenJSONBody

// PostFocusSessionsJSONRequestBody defines body for PostFocusSessions for application/json ContentType.
type PostFocusSessionsJSONRequestBody = CreateFocusSessionRequest

// PostFocusSessionsIdEndJSONRequestBody defines body for PostFocusSessionsIdEnd for application/json ContentType.
type PostFocusSessionsIdEndJSONRequestBody = EndFocusSessionRequest

// PostLoginJSONRequestBody defines body for PostLogin for application/json ContentType.
type PostLoginJSONRequestBody PostLoginJSONBody

// PostLogoutJSONRequestBody defines body for PostLogout for application/json ContentType.
type PostLogoutJSONRequestBody PostLogoutJSONBody

// PostRegisterJSONRequestBody defines body for PostRegister for application/json ContentType.
type PostRegisterJSONRequestBody PostRegisterJSONBody

// PostTasksJSONRequestBody defines body for PostTasks for application/json ContentType.
type PostTasksJSONRequestBody = CreateTaskRequest

// PutTasksIdJSONRequestBody defines body for PutTasksId for application/json ContentType.
type PutTasksIdJSONRequestBody = UpdateTaskRequest
